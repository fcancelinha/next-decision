{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bacardi/Code/next-decision/src/components/Main.jsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport base from \"../data/base\";\nvar style = StyleSheet.create({\n  container: {\n    display: 'flex'\n  },\n  display: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'blue'\n  },\n  decision: {\n    fontFamily: 'Hack',\n    fontSize: 30,\n    color: 'white'\n  }\n});\n\nvar Main = function Main() {\n  var _useState = useState('Hello!'),\n      _useState2 = _slicedToArray(_useState, 2),\n      decision = _useState2[0],\n      setDecision = _useState2[1];\n\n  var getDecision = function getDecision() {\n    var index = Math.floor(Math.random() * base.length);\n    setDecision(base[index]);\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, React.createElement(Pressable, {\n    onPress: getDecision,\n    style: style.display,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: style.decision,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, decision)));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/bacardi/Code/next-decision/src/components/Main.jsx"],"names":["React","useState","base","style","StyleSheet","create","container","display","flex","alignItems","justifyContent","backgroundColor","decision","fontFamily","fontSize","color","Main","setDecision","getDecision","index","Math","floor","random","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,IAAP;AAGA,IAAMC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAC;AACTC,IAAAA,OAAO,EAAC;AADC,GADqB;AAI/BA,EAAAA,OAAO,EAAE;AACRC,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,UAAU,EAAE,QAFJ;AAGRC,IAAAA,cAAc,EAAE,QAHR;AAIRC,IAAAA,eAAe,EAAE;AAJT,GAJsB;AAU/BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,UAAU,EAAE,MADH;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVqB,CAAlB,CAAd;;AAoBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAClB,kBAAgCf,QAAQ,CAAC,QAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBK,WAAjB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBpB,IAAI,CAACqB,MAAhC,CAAd;AACAN,IAAAA,WAAW,CAACf,IAAI,CAACiB,KAAD,CAAL,CAAX;AACA,GAHD;;AAKA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,KAAK,CAACG,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEY,WAApB;AAAiC,IAAA,KAAK,EAAEf,KAAK,CAACI,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACS,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,QAA/B,CADD,CADD,CADD;AAOA,CAfD;;AAiBA,eAAeI,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, Pressable, StyleSheet } from 'react-native'\nimport base from '../data/base'\n\n\nconst style = StyleSheet.create({\n\tcontainer:{\n\t\tdisplay:'flex',\n\t},\n\tdisplay: {\n\t\tflex: 1, \n\t\talignItems: 'center',\n\t\tjustifyContent: 'center', \n\t\tbackgroundColor: 'blue'\n\t},\n\tdecision: {\n\t\tfontFamily: 'Hack',\n\t\tfontSize: 30,\n\t\tcolor: 'white'\n\t}\n})\n\n\n\n\nconst Main = () => {\n\tconst [decision, setDecision] = useState('Hello!')\n\n\tconst getDecision = () => {\n\t\tconst index = Math.floor(Math.random() * base.length)\n\t\tsetDecision(base[index])\n\t}\n\t\t\n\treturn (\n\t\t<View style={style.container}>\n\t\t\t<Pressable onPress={getDecision} style={style.display}>\n\t\t\t\t<Text style={style.decision} >{decision}</Text>\n\t\t\t</Pressable>\n\t\t</View>\n\t)\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}